import 'package:drift/drift.dart';
import '../../../data/datasources/app_database.dart'; // This will be your main database class
import '../tables/podcasts.dart';

part 'podcasts_dao.g.dart'; // Generated by build_runner

@DriftAccessor(tables: [Podcasts])
class PodcastsDao extends DatabaseAccessor<AppDatabase> with _$PodcastsDaoMixin {
  PodcastsDao(super.db);

  Future<List<Podcast>> getSubscribedPodcasts() =>
      (select(podcasts)..orderBy([(t) => OrderingTerm(expression: t.sortOrder)])).get();

  Stream<List<Podcast>> watchSubscribedPodcasts() =>
      (select(podcasts)..orderBy([(t) => OrderingTerm(expression: t.sortOrder)])).watch();

  Future<int> subscribePodcast(PodcastsCompanion podcast) =>
      into(podcasts).insert(podcast, mode: InsertMode.replace);

  Future<int> unsubscribePodcast(String id) =>
      (delete(podcasts)..where((tbl) => tbl.id.equals(id))).go();

  Future<bool> isSubscribed(String id) async {
    final podcast = await (select(podcasts)..where((tbl) => tbl.id.equals(id))..limit(1)).getSingleOrNull();
    return podcast != null;
  }
}